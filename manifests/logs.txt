
==> Audit <==
|-----------|--------------------------------|----------|-------------|---------|---------------------|---------------------|
|  Command  |              Args              | Profile  |    User     | Version |     Start Time      |      End Time       |
|-----------|--------------------------------|----------|-------------|---------|---------------------|---------------------|
| ip        |                                | minikube | TUFSTUFF\PC | v1.31.2 | 28 Nov 23 21:23 +01 | 28 Nov 23 21:23 +01 |
| ip        |                                | minikube | TUFSTUFF\PC | v1.31.2 | 28 Nov 23 21:25 +01 | 28 Nov 23 21:25 +01 |
| addons    | enable ingress                 | minikube | TUFSTUFF\PC | v1.31.2 | 28 Nov 23 21:26 +01 | 28 Nov 23 21:28 +01 |
| tunnel    |                                | minikube | TUFSTUFF\PC | v1.31.2 | 28 Nov 23 21:29 +01 | 28 Nov 23 21:30 +01 |
| tunnel    |                                | minikube | TUFSTUFF\PC | v1.31.2 | 28 Nov 23 21:32 +01 | 28 Nov 23 21:33 +01 |
| start     |                                | minikube | TUFSTUFF\PC | v1.31.2 | 28 Nov 23 21:38 +01 |                     |
| start     |                                | minikube | TUFSTUFF\PC | v1.31.2 | 28 Nov 23 21:39 +01 | 28 Nov 23 21:39 +01 |
| dashboard |                                | minikube | TUFSTUFF\PC | v1.31.2 | 28 Nov 23 21:40 +01 |                     |
| ssh       |                                | minikube | TUFSTUFF\PC | v1.31.2 | 28 Nov 23 21:43 +01 |                     |
| addons    | enable ingress »               | minikube | TUFSTUFF\PC | v1.31.2 | 28 Nov 23 22:12 +01 |                     |
| addons    | enable ingress                 | minikube | TUFSTUFF\PC | v1.31.2 | 28 Nov 23 22:12 +01 | 28 Nov 23 22:12 +01 |
| addons    | enable ingress                 | minikube | TUFSTUFF\PC | v1.31.2 | 28 Nov 23 22:15 +01 | 28 Nov 23 22:15 +01 |
| tunnel    |                                | minikube | TUFSTUFF\PC | v1.31.2 | 28 Nov 23 22:15 +01 | 28 Nov 23 22:17 +01 |
| tunnel    |                                | minikube | TUFSTUFF\PC | v1.31.2 | 28 Nov 23 22:17 +01 |                     |
| start     |                                | minikube | TUFSTUFF\PC | v1.31.2 | 28 Nov 23 23:03 +01 | 28 Nov 23 23:04 +01 |
| dashboard |                                | minikube | TUFSTUFF\PC | v1.31.2 | 28 Nov 23 23:04 +01 |                     |
| addons    | enable ingress                 | minikube | TUFSTUFF\PC | v1.31.2 | 28 Nov 23 23:05 +01 | 28 Nov 23 23:05 +01 |
| tunnel    |                                | minikube | TUFSTUFF\PC | v1.31.2 | 28 Nov 23 23:05 +01 |                     |
| start     |                                | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 11:06 +01 | 29 Nov 23 11:07 +01 |
| dashboard |                                | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 11:07 +01 |                     |
| addons    | enable ingress                 | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 11:13 +01 | 29 Nov 23 11:13 +01 |
| tunnel    |                                | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 11:18 +01 | 29 Nov 23 11:24 +01 |
| start     |                                | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 20:34 +01 |                     |
| addons    | enable ingress                 | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 20:35 +01 |                     |
| addons    | enable ingress                 | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 20:35 +01 |                     |
| addons    | enable ingress                 | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 20:36 +01 |                     |
| start     |                                | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 20:43 +01 | 29 Nov 23 20:43 +01 |
| addons    | enable ingress                 | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 20:44 +01 | 29 Nov 23 20:44 +01 |
| dashboard |                                | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 20:44 +01 |                     |
| service   | frontend-service -n exam --url | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 20:46 +01 | 29 Nov 23 20:47 +01 |
| service   | frontend-service -n exam --url | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 20:48 +01 | 29 Nov 23 20:49 +01 |
| ip        |                                | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 21:17 +01 | 29 Nov 23 21:17 +01 |
| addons    | enable ingress                 | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 21:21 +01 | 29 Nov 23 21:21 +01 |
| service   | list                           | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 21:36 +01 | 29 Nov 23 21:36 +01 |
| tunnel    |                                | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 21:51 +01 | 29 Nov 23 23:59 +01 |
| ip        |                                | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 22:35 +01 | 29 Nov 23 22:35 +01 |
| addons    | enable ingress                 | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 22:40 +01 | 29 Nov 23 22:40 +01 |
| ip        |                                | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 22:53 +01 | 29 Nov 23 22:53 +01 |
| ip        |                                | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 22:55 +01 | 29 Nov 23 22:55 +01 |
| service   | web --url                      | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 23:31 +01 | 29 Nov 23 23:45 +01 |
| ip        |                                | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 23:36 +01 | 29 Nov 23 23:36 +01 |
| ip        |                                | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 23:40 +01 | 29 Nov 23 23:40 +01 |
| ip        |                                | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 23:41 +01 | 29 Nov 23 23:41 +01 |
| service   | web --url                      | minikube | TUFSTUFF\PC | v1.31.2 | 29 Nov 23 23:45 +01 |                     |
| ip        |                                | minikube | TUFSTUFF\PC | v1.31.2 | 30 Nov 23 00:30 +01 | 30 Nov 23 00:30 +01 |
| start     | --driver=hyperv --memory=8192  | minikube | TUFSTUFF\PC | v1.31.2 | 30 Nov 23 11:01 +01 |                     |
| start     | --driver=hyperv --memory=8192  | minikube | TUFSTUFF\PC | v1.31.2 | 30 Nov 23 11:02 +01 |                     |
| delete    |                                | minikube | TUFSTUFF\PC | v1.31.2 | 30 Nov 23 11:02 +01 | 30 Nov 23 11:03 +01 |
| start     | --driver=hyperv --memory=8192  | minikube | TUFSTUFF\PC | v1.31.2 | 30 Nov 23 11:03 +01 |                     |
| start     | --driver=hyperv                | minikube | TUFSTUFF\PC | v1.31.2 | 30 Nov 23 11:06 +01 |                     |
| start     | --driver=hyperv                | minikube | TUFSTUFF\PC | v1.31.2 | 30 Nov 23 11:09 +01 |                     |
| start     | --vm-driver hyperv             | minikube | TUFSTUFF\PC | v1.31.2 | 30 Nov 23 11:29 +01 |                     |
|           | --hyperv-virtual-switch        |          |             |         |                     |                     |
|           | Primary Virtual Switch         |          |             |         |                     |                     |
| delete    |                                | minikube | TUFSTUFF\PC | v1.31.2 | 30 Nov 23 11:30 +01 | 30 Nov 23 11:30 +01 |
| start     | --vm-driver hyperv             | minikube | TUFSTUFF\PC | v1.31.2 | 30 Nov 23 11:30 +01 | 30 Nov 23 11:31 +01 |
|           | --hyperv-virtual-switch        |          |             |         |                     |                     |
|           | Primary Virtual Switch         |          |             |         |                     |                     |
| stop      |                                | minikube | TUFSTUFF\PC | v1.31.2 | 30 Nov 23 11:32 +01 | 30 Nov 23 11:32 +01 |
| start     |                                | minikube | TUFSTUFF\PC | v1.31.2 | 30 Nov 23 11:33 +01 |                     |
| start     | --vm-driver hyperv             | minikube | TUFSTUFF\PC | v1.31.2 | 30 Nov 23 11:33 +01 | 30 Nov 23 11:34 +01 |
|           | --hyperv-virtual-switch        |          |             |         |                     |                     |
|           | Primary Virtual Switch         |          |             |         |                     |                     |
| dashboard |                                | minikube | TUFSTUFF\PC | v1.31.2 | 30 Nov 23 11:34 +01 |                     |
| addons    | enable ingress                 | minikube | TUFSTUFF\PC | v1.31.2 | 30 Nov 23 11:39 +01 |                     |
| addons    | enable ingress                 | minikube | TUFSTUFF\PC | v1.31.2 | 30 Nov 23 11:41 +01 |                     |
|-----------|--------------------------------|----------|-------------|---------|---------------------|---------------------|


==> Last Start <==
Log file created at: 2023/11/30 11:33:40
Running on machine: TufStuff
Binary: Built with gc go1.20.7 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I1130 11:33:40.088566   10840 out.go:296] Setting OutFile to fd 96 ...
I1130 11:33:40.089149   10840 out.go:309] Setting ErrFile to fd 100...
I1130 11:33:40.103838   10840 out.go:303] Setting JSON to false
I1130 11:33:40.107717   10840 start.go:128] hostinfo: {"hostname":"TufStuff","uptime":683,"bootTime":1701339737,"procs":292,"os":"windows","platform":"Microsoft Windows 11 Pro","platformFamily":"Standalone Workstation","platformVersion":"10.0.22621.2428 Build 22621.2428","kernelVersion":"10.0.22621.2428 Build 22621.2428","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"","hostId":"ff99ac15-44c4-429c-8a82-74c5bf223ccb"}
W1130 11:33:40.108223   10840 start.go:136] gopshost.Virtualization returned error: not implemented yet
I1130 11:33:40.109233   10840 out.go:177] 😄  minikube v1.31.2 on Microsoft Windows 11 Pro 10.0.22621.2428 Build 22621.2428
I1130 11:33:40.109233   10840 notify.go:220] Checking for updates...
I1130 11:33:40.110244   10840 config.go:182] Loaded profile config "minikube": Driver=hyperv, ContainerRuntime=docker, KubernetesVersion=v1.27.4
I1130 11:33:40.110244   10840 driver.go:373] Setting default libvirt URI to qemu:///system
I1130 11:33:41.305093   10840 out.go:177] ✨  Using the hyperv driver based on existing profile
I1130 11:33:41.305700   10840 start.go:298] selected driver: hyperv
I1130 11:33:41.305700   10840 start.go:902] validating driver "hyperv" against &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16971/minikube-v1.31.0-amd64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:hyperv HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch:Primary Virtual Switch HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.4 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.56.66 Port:8443 KubernetesVersion:v1.27.4 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\PC:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0}
I1130 11:33:41.305872   10840 start.go:913] status for hyperv: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I1130 11:33:41.324657   10840 cni.go:84] Creating CNI manager for ""
I1130 11:33:41.324657   10840 cni.go:158] "hyperv" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I1130 11:33:41.324657   10840 start_flags.go:319] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16971/minikube-v1.31.0-amd64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:hyperv HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch:Primary Virtual Switch HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.4 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.56.66 Port:8443 KubernetesVersion:v1.27.4 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\PC:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0}
I1130 11:33:41.324657   10840 iso.go:125] acquiring lock: {Name:mkab8127cbca2b5e80d04ce3a54f2785729ef638 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I1130 11:33:41.325225   10840 out.go:177] 👍  Starting control plane node minikube in cluster minikube
I1130 11:33:41.325735   10840 preload.go:132] Checking if preload exists for k8s version v1.27.4 and runtime docker
I1130 11:33:41.325735   10840 preload.go:148] Found local preload: C:\Users\PC\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.27.4-docker-overlay2-amd64.tar.lz4
I1130 11:33:41.325735   10840 cache.go:57] Caching tarball of preloaded images
I1130 11:33:41.326256   10840 preload.go:174] Found C:\Users\PC\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.27.4-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I1130 11:33:41.326256   10840 cache.go:60] Finished verifying existence of preloaded tar for  v1.27.4 on docker
I1130 11:33:41.326256   10840 profile.go:148] Saving config to C:\Users\PC\.minikube\profiles\minikube\config.json ...
I1130 11:33:41.326775   10840 start.go:365] acquiring machines lock for minikube: {Name:mka0b9fd924f15c28a36973f802dca6e8ff5805e Clock:{} Delay:500ms Timeout:13m0s Cancel:<nil>}
I1130 11:33:41.326775   10840 start.go:369] acquired machines lock for "minikube" in 0s
I1130 11:33:41.327315   10840 start.go:96] Skipping create...Using existing machine configuration
I1130 11:33:41.327315   10840 fix.go:54] fixHost starting: 
I1130 11:33:41.327315   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:33:41.791525   10840 main.go:141] libmachine: [stdout =====>] : Off

I1130 11:33:41.791525   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:41.791525   10840 fix.go:102] recreateIfNeeded on minikube: state=Stopped err=<nil>
W1130 11:33:41.791525   10840 fix.go:128] unexpected machine state, will restart: <nil>
I1130 11:33:41.793104   10840 out.go:177] 🔄  Restarting existing hyperv VM for "minikube" ...
I1130 11:33:41.794007   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive Hyper-V\Start-VM minikube
I1130 11:33:43.101604   10840 main.go:141] libmachine: [stdout =====>] : 
I1130 11:33:43.101604   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:43.101604   10840 main.go:141] libmachine: Waiting for host to start...
I1130 11:33:43.101604   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:33:43.490720   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:33:43.490720   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:43.490720   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:33:44.074522   10840 main.go:141] libmachine: [stdout =====>] : 
I1130 11:33:44.074522   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:45.075721   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:33:45.499239   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:33:45.499239   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:45.499239   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:33:46.078692   10840 main.go:141] libmachine: [stdout =====>] : 
I1130 11:33:46.078692   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:47.078978   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:33:47.551834   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:33:47.551834   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:47.551834   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:33:48.326162   10840 main.go:141] libmachine: [stdout =====>] : 
I1130 11:33:48.326162   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:49.336710   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:33:49.802438   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:33:49.802438   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:49.802438   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:33:50.560417   10840 main.go:141] libmachine: [stdout =====>] : 192.168.56.66

I1130 11:33:50.560417   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:50.561646   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:33:51.089025   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:33:51.089025   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:51.089025   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:33:52.606242   10840 main.go:141] libmachine: [stdout =====>] : 192.168.56.66

I1130 11:33:52.606242   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:52.606242   10840 profile.go:148] Saving config to C:\Users\PC\.minikube\profiles\minikube\config.json ...
I1130 11:33:52.608471   10840 machine.go:88] provisioning docker machine ...
I1130 11:33:52.608471   10840 buildroot.go:166] provisioning hostname "minikube"
I1130 11:33:52.608471   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:33:53.204876   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:33:53.205359   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:53.205359   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:33:54.188714   10840 main.go:141] libmachine: [stdout =====>] : 192.168.56.66

I1130 11:33:54.188714   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:54.189236   10840 main.go:141] libmachine: Using SSH client type: native
I1130 11:33:54.197288   10840 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xd49400] 0xd4c2a0 <nil>  [] 0s} 192.168.56.66 22 <nil> <nil>}
I1130 11:33:54.197288   10840 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I1130 11:33:54.364404   10840 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I1130 11:33:54.364915   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:33:55.589641   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:33:55.589977   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:55.589977   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:33:56.675669   10840 main.go:141] libmachine: [stdout =====>] : 192.168.56.66

I1130 11:33:56.675669   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:56.676173   10840 main.go:141] libmachine: Using SSH client type: native
I1130 11:33:56.676690   10840 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xd49400] 0xd4c2a0 <nil>  [] 0s} 192.168.56.66 22 <nil> <nil>}
I1130 11:33:56.676690   10840 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I1130 11:33:56.795610   10840 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I1130 11:33:56.795610   10840 buildroot.go:172] set auth options {CertDir:C:\Users\PC\.minikube CaCertPath:C:\Users\PC\.minikube\certs\ca.pem CaPrivateKeyPath:C:\Users\PC\.minikube\certs\ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:C:\Users\PC\.minikube\machines\server.pem ServerKeyPath:C:\Users\PC\.minikube\machines\server-key.pem ClientKeyPath:C:\Users\PC\.minikube\certs\key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:C:\Users\PC\.minikube\certs\cert.pem ServerCertSANs:[] StorePath:C:\Users\PC\.minikube}
I1130 11:33:56.795610   10840 buildroot.go:174] setting up certificates
I1130 11:33:56.795610   10840 provision.go:83] configureAuth start
I1130 11:33:56.795610   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:33:57.358205   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:33:57.358205   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:57.358205   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:33:57.929996   10840 main.go:141] libmachine: [stdout =====>] : 192.168.56.66

I1130 11:33:57.929996   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:57.929996   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:33:58.359731   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:33:58.359731   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:58.359731   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:33:59.012189   10840 main.go:141] libmachine: [stdout =====>] : 192.168.56.66

I1130 11:33:59.012189   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:59.012189   10840 provision.go:138] copyHostCerts
I1130 11:33:59.016023   10840 exec_runner.go:144] found C:\Users\PC\.minikube/ca.pem, removing ...
I1130 11:33:59.016023   10840 exec_runner.go:203] rm: C:\Users\PC\.minikube\ca.pem
I1130 11:33:59.016023   10840 exec_runner.go:151] cp: C:\Users\PC\.minikube\certs\ca.pem --> C:\Users\PC\.minikube/ca.pem (1066 bytes)
I1130 11:33:59.020362   10840 exec_runner.go:144] found C:\Users\PC\.minikube/cert.pem, removing ...
I1130 11:33:59.020362   10840 exec_runner.go:203] rm: C:\Users\PC\.minikube\cert.pem
I1130 11:33:59.020362   10840 exec_runner.go:151] cp: C:\Users\PC\.minikube\certs\cert.pem --> C:\Users\PC\.minikube/cert.pem (1111 bytes)
I1130 11:33:59.024570   10840 exec_runner.go:144] found C:\Users\PC\.minikube/key.pem, removing ...
I1130 11:33:59.024570   10840 exec_runner.go:203] rm: C:\Users\PC\.minikube\key.pem
I1130 11:33:59.024570   10840 exec_runner.go:151] cp: C:\Users\PC\.minikube\certs\key.pem --> C:\Users\PC\.minikube/key.pem (1679 bytes)
I1130 11:33:59.025100   10840 provision.go:112] generating server cert: C:\Users\PC\.minikube\machines\server.pem ca-key=C:\Users\PC\.minikube\certs\ca.pem private-key=C:\Users\PC\.minikube\certs\ca-key.pem org=PC.minikube san=[192.168.56.66 192.168.56.66 localhost 127.0.0.1 minikube minikube]
I1130 11:33:59.121018   10840 provision.go:172] copyRemoteCerts
I1130 11:33:59.130134   10840 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I1130 11:33:59.130134   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:33:59.566545   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:33:59.566545   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:33:59.566545   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:34:00.287150   10840 main.go:141] libmachine: [stdout =====>] : 192.168.56.66

I1130 11:34:00.287150   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:00.287150   10840 sshutil.go:53] new ssh client: &{IP:192.168.56.66 Port:22 SSHKeyPath:C:\Users\PC\.minikube\machines\minikube\id_rsa Username:docker}
I1130 11:34:00.374662   10840 ssh_runner.go:235] Completed: sudo mkdir -p /etc/docker /etc/docker /etc/docker: (1.2445276s)
I1130 11:34:00.374662   10840 ssh_runner.go:362] scp C:\Users\PC\.minikube\certs\ca.pem --> /etc/docker/ca.pem (1066 bytes)
I1130 11:34:00.395750   10840 ssh_runner.go:362] scp C:\Users\PC\.minikube\machines\server.pem --> /etc/docker/server.pem (1192 bytes)
I1130 11:34:00.412635   10840 ssh_runner.go:362] scp C:\Users\PC\.minikube\machines\server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I1130 11:34:00.431237   10840 provision.go:86] duration metric: configureAuth took 3.6356263s
I1130 11:34:00.431237   10840 buildroot.go:189] setting minikube options for container-runtime
I1130 11:34:00.431742   10840 config.go:182] Loaded profile config "minikube": Driver=hyperv, ContainerRuntime=docker, KubernetesVersion=v1.27.4
I1130 11:34:00.431742   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:34:00.915414   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:34:00.915414   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:00.915414   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:34:01.516502   10840 main.go:141] libmachine: [stdout =====>] : 192.168.56.66

I1130 11:34:01.516502   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:01.516502   10840 main.go:141] libmachine: Using SSH client type: native
I1130 11:34:01.517008   10840 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xd49400] 0xd4c2a0 <nil>  [] 0s} 192.168.56.66 22 <nil> <nil>}
I1130 11:34:01.517008   10840 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I1130 11:34:01.642939   10840 main.go:141] libmachine: SSH cmd err, output: <nil>: tmpfs

I1130 11:34:01.642939   10840 buildroot.go:70] root file system type: tmpfs
I1130 11:34:01.643443   10840 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I1130 11:34:01.643443   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:34:02.091409   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:34:02.091409   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:02.091409   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:34:02.751473   10840 main.go:141] libmachine: [stdout =====>] : 192.168.56.66

I1130 11:34:02.751473   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:02.752071   10840 main.go:141] libmachine: Using SSH client type: native
I1130 11:34:02.752774   10840 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xd49400] 0xd4c2a0 <nil>  [] 0s} 192.168.56.66 22 <nil> <nil>}
I1130 11:34:02.752774   10840 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
After=network.target  minikube-automount.service docker.socket
Requires= minikube-automount.service docker.socket 
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=hyperv --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I1130 11:34:02.875338   10840 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
After=network.target  minikube-automount.service docker.socket
Requires= minikube-automount.service docker.socket 
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=hyperv --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I1130 11:34:02.875405   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:34:03.350615   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:34:03.350615   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:03.350615   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:34:04.016383   10840 main.go:141] libmachine: [stdout =====>] : 192.168.56.66

I1130 11:34:04.016383   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:04.016383   10840 main.go:141] libmachine: Using SSH client type: native
I1130 11:34:04.016887   10840 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xd49400] 0xd4c2a0 <nil>  [] 0s} 192.168.56.66 22 <nil> <nil>}
I1130 11:34:04.016887   10840 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I1130 11:34:04.665536   10840 main.go:141] libmachine: SSH cmd err, output: <nil>: diff: can't stat '/lib/systemd/system/docker.service': No such file or directory
Created symlink /etc/systemd/system/multi-user.target.wants/docker.service → /usr/lib/systemd/system/docker.service.

I1130 11:34:04.665536   10840 machine.go:91] provisioned docker machine in 12.0570652s
I1130 11:34:04.665536   10840 start.go:300] post-start starting for "minikube" (driver="hyperv")
I1130 11:34:04.665536   10840 start.go:329] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I1130 11:34:04.675035   10840 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I1130 11:34:04.675035   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:34:05.206125   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:34:05.206125   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:05.206125   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:34:05.946826   10840 main.go:141] libmachine: [stdout =====>] : 192.168.56.66

I1130 11:34:05.946826   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:05.946826   10840 sshutil.go:53] new ssh client: &{IP:192.168.56.66 Port:22 SSHKeyPath:C:\Users\PC\.minikube\machines\minikube\id_rsa Username:docker}
I1130 11:34:06.029896   10840 ssh_runner.go:235] Completed: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs: (1.3548604s)
I1130 11:34:06.037757   10840 ssh_runner.go:195] Run: cat /etc/os-release
I1130 11:34:06.040518   10840 info.go:137] Remote host: Buildroot 2021.02.12
I1130 11:34:06.040518   10840 filesync.go:126] Scanning C:\Users\PC\.minikube\addons for local assets ...
I1130 11:34:06.040518   10840 filesync.go:126] Scanning C:\Users\PC\.minikube\files for local assets ...
I1130 11:34:06.040518   10840 start.go:303] post-start completed in 1.374982s
I1130 11:34:06.040518   10840 fix.go:56] fixHost completed within 24.7132038s
I1130 11:34:06.040518   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:34:06.447006   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:34:06.447006   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:06.447006   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:34:07.015976   10840 main.go:141] libmachine: [stdout =====>] : 192.168.56.66

I1130 11:34:07.015976   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:07.015976   10840 main.go:141] libmachine: Using SSH client type: native
I1130 11:34:07.016480   10840 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xd49400] 0xd4c2a0 <nil>  [] 0s} 192.168.56.66 22 <nil> <nil>}
I1130 11:34:07.016480   10840 main.go:141] libmachine: About to run SSH command:
date +%!s(MISSING).%!N(MISSING)
I1130 11:34:07.127782   10840 main.go:141] libmachine: SSH cmd err, output: <nil>: 1701340447.127537115

I1130 11:34:07.127782   10840 fix.go:206] guest clock: 1701340447.127537115
I1130 11:34:07.127782   10840 fix.go:219] Guest: 2023-11-30 11:34:07.127537115 +0100 +01 Remote: 2023-11-30 11:34:06.0405189 +0100 +01 m=+25.981639701 (delta=1.087018215s)
I1130 11:34:07.127782   10840 fix.go:190] guest clock delta is within tolerance: 1.087018215s
I1130 11:34:07.127782   10840 start.go:83] releasing machines lock for "minikube", held for 25.8010071s
I1130 11:34:07.127782   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:34:07.570078   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:34:07.570078   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:07.570078   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:34:08.297472   10840 main.go:141] libmachine: [stdout =====>] : 192.168.56.66

I1130 11:34:08.297472   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:08.301929   10840 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I1130 11:34:08.301929   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:34:08.313398   10840 ssh_runner.go:195] Run: cat /version.json
I1130 11:34:08.313398   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:34:08.868140   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:34:08.868140   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:08.868140   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:34:08.883481   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:34:08.883481   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:08.883481   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:34:09.731152   10840 main.go:141] libmachine: [stdout =====>] : 192.168.56.66

I1130 11:34:09.731152   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:09.731152   10840 sshutil.go:53] new ssh client: &{IP:192.168.56.66 Port:22 SSHKeyPath:C:\Users\PC\.minikube\machines\minikube\id_rsa Username:docker}
I1130 11:34:09.737952   10840 main.go:141] libmachine: [stdout =====>] : 192.168.56.66

I1130 11:34:09.737952   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:09.737952   10840 sshutil.go:53] new ssh client: &{IP:192.168.56.66 Port:22 SSHKeyPath:C:\Users\PC\.minikube\machines\minikube\id_rsa Username:docker}
I1130 11:34:10.228001   10840 ssh_runner.go:235] Completed: curl -sS -m 2 https://registry.k8s.io/: (1.9260725s)
I1130 11:34:10.228001   10840 ssh_runner.go:235] Completed: cat /version.json: (1.9146027s)
I1130 11:34:10.240239   10840 ssh_runner.go:195] Run: systemctl --version
I1130 11:34:10.252235   10840 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
W1130 11:34:10.257106   10840 cni.go:209] loopback cni configuration skipped: "/etc/cni/net.d/*loopback.conf*" not found
I1130 11:34:10.268284   10840 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I1130 11:34:10.279810   10840 cni.go:262] disabled [/etc/cni/net.d/87-podman-bridge.conflist] bridge cni config(s)
I1130 11:34:10.279810   10840 start.go:466] detecting cgroup driver to use...
I1130 11:34:10.279810   10840 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I1130 11:34:10.293320   10840 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I1130 11:34:10.303008   10840 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I1130 11:34:10.310686   10840 containerd.go:145] configuring containerd to use "cgroupfs" as cgroup driver...
I1130 11:34:10.311725   10840 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I1130 11:34:10.319783   10840 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I1130 11:34:10.328750   10840 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I1130 11:34:10.337437   10840 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I1130 11:34:10.347097   10840 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I1130 11:34:10.356282   10840 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I1130 11:34:10.372438   10840 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I1130 11:34:10.392298   10840 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I1130 11:34:10.409883   10840 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1130 11:34:10.517721   10840 ssh_runner.go:195] Run: sudo systemctl restart containerd
I1130 11:34:10.533250   10840 start.go:466] detecting cgroup driver to use...
I1130 11:34:10.547618   10840 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I1130 11:34:10.564429   10840 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service containerd
I1130 11:34:10.581854   10840 ssh_runner.go:195] Run: sudo systemctl stop -f containerd
I1130 11:34:10.600542   10840 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service containerd
I1130 11:34:10.616613   10840 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I1130 11:34:10.632568   10840 ssh_runner.go:195] Run: sudo systemctl stop -f crio
I1130 11:34:10.660918   10840 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I1130 11:34:10.669125   10840 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I1130 11:34:10.687468   10840 ssh_runner.go:195] Run: which cri-dockerd
I1130 11:34:10.698549   10840 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I1130 11:34:10.703920   10840 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I1130 11:34:10.720640   10840 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I1130 11:34:10.791280   10840 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I1130 11:34:10.863175   10840 docker.go:535] configuring docker to use "cgroupfs" as cgroup driver...
I1130 11:34:10.863175   10840 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (144 bytes)
I1130 11:34:10.883243   10840 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1130 11:34:10.964445   10840 ssh_runner.go:195] Run: sudo systemctl restart docker
I1130 11:34:12.210570   10840 ssh_runner.go:235] Completed: sudo systemctl restart docker: (1.2461253s)
I1130 11:34:12.218590   10840 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I1130 11:34:12.288866   10840 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I1130 11:34:12.357498   10840 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I1130 11:34:12.431168   10840 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1130 11:34:12.502148   10840 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I1130 11:34:12.519928   10840 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I1130 11:34:12.586361   10840 ssh_runner.go:195] Run: sudo systemctl restart cri-docker
I1130 11:34:12.622932   10840 start.go:513] Will wait 60s for socket path /var/run/cri-dockerd.sock
I1130 11:34:12.631490   10840 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I1130 11:34:12.634430   10840 start.go:534] Will wait 60s for crictl version
I1130 11:34:12.642271   10840 ssh_runner.go:195] Run: which crictl
I1130 11:34:12.652975   10840 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I1130 11:34:12.672474   10840 start.go:550] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  24.0.4
RuntimeApiVersion:  v1alpha2
I1130 11:34:12.674600   10840 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I1130 11:34:12.688920   10840 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I1130 11:34:12.703151   10840 out.go:204] 🐳  Preparing Kubernetes v1.27.4 on Docker 24.0.4 ...
I1130 11:34:12.703666   10840 ip.go:172] getIPForInterface: searching for "vEthernet (Primary Virtual Switch)"
I1130 11:34:12.709290   10840 ip.go:186] "Ethernet" does not match prefix "vEthernet (Primary Virtual Switch)"
I1130 11:34:12.709290   10840 ip.go:186] "Ethernet 2" does not match prefix "vEthernet (Primary Virtual Switch)"
I1130 11:34:12.709290   10840 ip.go:181] found prefix matching interface for "vEthernet (Primary Virtual Switch)": "vEthernet (Primary Virtual Switch)"
I1130 11:34:12.709290   10840 ip.go:207] Found interface: {Index:66 MTU:1500 Name:vEthernet (Primary Virtual Switch) HardwareAddr:14:13:33:0c:35:83 Flags:up|broadcast|multicast|running}
I1130 11:34:12.714311   10840 ip.go:210] interface addr: fe80::ced9:d782:6ca8:baf9/64
I1130 11:34:12.714311   10840 ip.go:210] interface addr: 192.168.58.17/21
I1130 11:34:12.722347   10840 ssh_runner.go:195] Run: grep 192.168.58.17	host.minikube.internal$ /etc/hosts
I1130 11:34:12.724550   10840 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.58.17	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I1130 11:34:12.730087   10840 preload.go:132] Checking if preload exists for k8s version v1.27.4 and runtime docker
I1130 11:34:12.732432   10840 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I1130 11:34:12.741788   10840 docker.go:636] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.27.4
registry.k8s.io/kube-controller-manager:v1.27.4
registry.k8s.io/kube-proxy:v1.27.4
registry.k8s.io/kube-scheduler:v1.27.4
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/etcd:3.5.7-0
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I1130 11:34:12.741788   10840 docker.go:566] Images already preloaded, skipping extraction
I1130 11:34:12.744485   10840 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I1130 11:34:12.754050   10840 docker.go:636] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.27.4
registry.k8s.io/kube-scheduler:v1.27.4
registry.k8s.io/kube-controller-manager:v1.27.4
registry.k8s.io/kube-proxy:v1.27.4
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/etcd:3.5.7-0
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I1130 11:34:12.754050   10840 cache_images.go:84] Images are preloaded, skipping loading
I1130 11:34:12.756885   10840 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I1130 11:34:12.769405   10840 cni.go:84] Creating CNI manager for ""
I1130 11:34:12.769405   10840 cni.go:158] "hyperv" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I1130 11:34:12.769405   10840 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I1130 11:34:12.769405   10840 kubeadm.go:176] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.56.66 APIServerPort:8443 KubernetesVersion:v1.27.4 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.56.66"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.56.66 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I1130 11:34:12.769405   10840 kubeadm.go:181] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.56.66
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.56.66
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.56.66"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.27.4
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I1130 11:34:12.769405   10840 kubeadm.go:976] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.27.4/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.56.66

[Install]
 config:
{KubernetesVersion:v1.27.4 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I1130 11:34:12.777571   10840 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.27.4
I1130 11:34:12.784311   10840 binaries.go:44] Found k8s binaries, skipping transfer
I1130 11:34:12.792309   10840 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I1130 11:34:12.796385   10840 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (370 bytes)
I1130 11:34:12.804818   10840 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I1130 11:34:12.812755   10840 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2094 bytes)
I1130 11:34:12.828380   10840 ssh_runner.go:195] Run: grep 192.168.56.66	control-plane.minikube.internal$ /etc/hosts
I1130 11:34:12.830614   10840 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.56.66	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I1130 11:34:12.835941   10840 certs.go:56] Setting up C:\Users\PC\.minikube\profiles\minikube for IP: 192.168.56.66
I1130 11:34:12.835941   10840 certs.go:190] acquiring lock for shared ca certs: {Name:mk672abd257cd79522c594860d1580eca37dcede Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1130 11:34:12.844248   10840 certs.go:199] skipping minikubeCA CA generation: C:\Users\PC\.minikube\ca.key
I1130 11:34:12.851633   10840 certs.go:199] skipping proxyClientCA CA generation: C:\Users\PC\.minikube\proxy-client-ca.key
I1130 11:34:12.859371   10840 certs.go:315] skipping minikube-user signed cert generation: C:\Users\PC\.minikube\profiles\minikube\client.key
I1130 11:34:12.866251   10840 certs.go:315] skipping minikube signed cert generation: C:\Users\PC\.minikube\profiles\minikube\apiserver.key.b435034a
I1130 11:34:12.874668   10840 certs.go:315] skipping aggregator signed cert generation: C:\Users\PC\.minikube\profiles\minikube\proxy-client.key
I1130 11:34:12.875850   10840 certs.go:437] found cert: C:\Users\PC\.minikube\certs\C:\Users\PC\.minikube\certs\ca-key.pem (1679 bytes)
I1130 11:34:12.876424   10840 certs.go:437] found cert: C:\Users\PC\.minikube\certs\C:\Users\PC\.minikube\certs\ca.pem (1066 bytes)
I1130 11:34:12.876557   10840 certs.go:437] found cert: C:\Users\PC\.minikube\certs\C:\Users\PC\.minikube\certs\cert.pem (1111 bytes)
I1130 11:34:12.876557   10840 certs.go:437] found cert: C:\Users\PC\.minikube\certs\C:\Users\PC\.minikube\certs\key.pem (1679 bytes)
I1130 11:34:12.876734   10840 ssh_runner.go:362] scp C:\Users\PC\.minikube\profiles\minikube\apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I1130 11:34:12.889477   10840 ssh_runner.go:362] scp C:\Users\PC\.minikube\profiles\minikube\apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I1130 11:34:12.900148   10840 ssh_runner.go:362] scp C:\Users\PC\.minikube\profiles\minikube\proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I1130 11:34:12.911032   10840 ssh_runner.go:362] scp C:\Users\PC\.minikube\profiles\minikube\proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1675 bytes)
I1130 11:34:12.922700   10840 ssh_runner.go:362] scp C:\Users\PC\.minikube\ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I1130 11:34:12.933663   10840 ssh_runner.go:362] scp C:\Users\PC\.minikube\ca.key --> /var/lib/minikube/certs/ca.key (1679 bytes)
I1130 11:34:12.945609   10840 ssh_runner.go:362] scp C:\Users\PC\.minikube\proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I1130 11:34:12.957488   10840 ssh_runner.go:362] scp C:\Users\PC\.minikube\proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I1130 11:34:12.968377   10840 ssh_runner.go:362] scp C:\Users\PC\.minikube\ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I1130 11:34:12.978938   10840 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I1130 11:34:12.994355   10840 ssh_runner.go:195] Run: openssl version
I1130 11:34:13.005142   10840 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I1130 11:34:13.018113   10840 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I1130 11:34:13.020896   10840 certs.go:480] hashing: -rw-r--r-- 1 root root 1111 Nov 27 14:56 /usr/share/ca-certificates/minikubeCA.pem
I1130 11:34:13.029507   10840 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I1130 11:34:13.041821   10840 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I1130 11:34:13.056106   10840 ssh_runner.go:195] Run: ls /var/lib/minikube/certs/etcd
I1130 11:34:13.067676   10840 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-etcd-client.crt -checkend 86400
I1130 11:34:13.079900   10840 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/apiserver-kubelet-client.crt -checkend 86400
I1130 11:34:13.092718   10840 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/server.crt -checkend 86400
I1130 11:34:13.104079   10840 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/healthcheck-client.crt -checkend 86400
I1130 11:34:13.115806   10840 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/etcd/peer.crt -checkend 86400
I1130 11:34:13.127903   10840 ssh_runner.go:195] Run: openssl x509 -noout -in /var/lib/minikube/certs/front-proxy-client.crt -checkend 86400
I1130 11:34:13.131386   10840 kubeadm.go:404] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube-builds/iso/16971/minikube-v1.31.0-amd64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.40@sha256:8cadf23777709e43eca447c47a45f5a4635615129267ce025193040ec92a1631 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:hyperv HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch:Primary Virtual Switch HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.27.4 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.56.66 Port:8443 KubernetesVersion:v1.27.4 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\PC:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0}
I1130 11:34:13.133619   10840 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I1130 11:34:13.151078   10840 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I1130 11:34:13.156708   10840 kubeadm.go:419] found existing configuration files, will attempt cluster restart
I1130 11:34:13.156708   10840 kubeadm.go:636] restartCluster start
I1130 11:34:13.165527   10840 ssh_runner.go:195] Run: sudo test -d /data/minikube
I1130 11:34:13.170315   10840 kubeadm.go:127] /data/minikube skipping compat symlinks: sudo test -d /data/minikube: Process exited with status 1
stdout:

stderr:
I1130 11:34:13.175165   10840 kubeconfig.go:135] verify returned: extract IP: "minikube" does not appear in C:\Users\PC\.kube\config
I1130 11:34:13.175708   10840 kubeconfig.go:146] "minikube" context is missing from C:\Users\PC\.kube\config - will repair!
I1130 11:34:13.176250   10840 lock.go:35] WriteFile acquiring C:\Users\PC\.kube\config: {Name:mk82ca6f587f47fa1fdc70041f725ef9cc6a69d6 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1130 11:34:13.191308   10840 ssh_runner.go:195] Run: sudo diff -u /var/tmp/minikube/kubeadm.yaml /var/tmp/minikube/kubeadm.yaml.new
I1130 11:34:13.196911   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:13.205113   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:13.210874   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:13.210874   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:13.218800   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:13.224545   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:13.733870   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:13.741717   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:13.748799   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:14.226291   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:14.234675   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:14.241838   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:14.735247   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:14.743079   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:14.749590   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:15.225526   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:15.232928   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:15.239287   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:15.731953   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:15.740137   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:15.746690   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:16.238183   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:16.245788   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:16.252893   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:16.735185   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:16.743156   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:16.750281   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:17.230150   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:17.238037   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:17.245270   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:17.730931   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:17.738143   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:17.745151   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:18.228375   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:18.236213   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:18.243438   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:18.734715   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:18.742203   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:18.749871   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:19.225464   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:19.232697   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:19.239807   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:19.732265   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:19.740109   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:19.746342   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:20.239807   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:20.247635   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:20.253930   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:20.733920   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:20.741295   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:20.748319   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:21.231502   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:21.239214   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:21.246100   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:21.738384   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:21.746197   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:21.752232   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:22.229893   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:22.237764   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:22.243821   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:22.729671   10840 api_server.go:166] Checking apiserver status ...
I1130 11:34:22.737763   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W1130 11:34:22.743869   10840 api_server.go:170] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I1130 11:34:23.212831   10840 kubeadm.go:611] needs reconfigure: apiserver error: context deadline exceeded
I1130 11:34:23.212831   10840 kubeadm.go:1128] stopping kube-system containers ...
I1130 11:34:23.214733   10840 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I1130 11:34:23.227364   10840 docker.go:462] Stopping containers: [68faaef3d258 2325f6e61656 a0e7a729b9c4 4efbc0cefbf7 e7395df78e45 97de159d88f7 84b0e9dfb874 c91573c0a456 e877acbf4174 d3b06ddaeb0e a078755dbc17 b04010b5af2e 8ef56363f151 e54bf0b6e9ae]
I1130 11:34:23.229469   10840 ssh_runner.go:195] Run: docker stop 68faaef3d258 2325f6e61656 a0e7a729b9c4 4efbc0cefbf7 e7395df78e45 97de159d88f7 84b0e9dfb874 c91573c0a456 e877acbf4174 d3b06ddaeb0e a078755dbc17 b04010b5af2e 8ef56363f151 e54bf0b6e9ae
I1130 11:34:23.246715   10840 ssh_runner.go:195] Run: sudo systemctl stop kubelet
I1130 11:34:23.262123   10840 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I1130 11:34:23.267924   10840 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I1130 11:34:23.276355   10840 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I1130 11:34:23.281039   10840 kubeadm.go:713] reconfiguring cluster from /var/tmp/minikube/kubeadm.yaml
I1130 11:34:23.281039   10840 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm init phase certs all --config /var/tmp/minikube/kubeadm.yaml"
I1130 11:34:23.408495   10840 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm init phase kubeconfig all --config /var/tmp/minikube/kubeadm.yaml"
I1130 11:34:23.810331   10840 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm init phase kubelet-start --config /var/tmp/minikube/kubeadm.yaml"
I1130 11:34:23.909934   10840 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm init phase control-plane all --config /var/tmp/minikube/kubeadm.yaml"
I1130 11:34:23.942939   10840 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm init phase etcd local --config /var/tmp/minikube/kubeadm.yaml"
I1130 11:34:23.971806   10840 api_server.go:52] waiting for apiserver process to appear ...
I1130 11:34:23.979749   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I1130 11:34:23.994114   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I1130 11:34:24.514711   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I1130 11:34:25.020833   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I1130 11:34:25.518960   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I1130 11:34:25.531205   10840 api_server.go:72] duration metric: took 1.559399s to wait for apiserver process to appear ...
I1130 11:34:25.531205   10840 api_server.go:88] waiting for apiserver healthz status ...
I1130 11:34:25.531205   10840 api_server.go:253] Checking apiserver healthz at https://192.168.56.66:8443/healthz ...
I1130 11:34:27.516995   10840 api_server.go:279] https://192.168.56.66:8443/healthz returned 403:
{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"forbidden: User \"system:anonymous\" cannot get path \"/healthz\"","reason":"Forbidden","details":{},"code":403}
W1130 11:34:27.516995   10840 api_server.go:103] status: https://192.168.56.66:8443/healthz returned error 403:
{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"forbidden: User \"system:anonymous\" cannot get path \"/healthz\"","reason":"Forbidden","details":{},"code":403}
I1130 11:34:27.516995   10840 api_server.go:253] Checking apiserver healthz at https://192.168.56.66:8443/healthz ...
I1130 11:34:27.537368   10840 api_server.go:279] https://192.168.56.66:8443/healthz returned 403:
{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"forbidden: User \"system:anonymous\" cannot get path \"/healthz\"","reason":"Forbidden","details":{},"code":403}
W1130 11:34:27.537994   10840 api_server.go:103] status: https://192.168.56.66:8443/healthz returned error 403:
{"kind":"Status","apiVersion":"v1","metadata":{},"status":"Failure","message":"forbidden: User \"system:anonymous\" cannot get path \"/healthz\"","reason":"Forbidden","details":{},"code":403}
I1130 11:34:28.040123   10840 api_server.go:253] Checking apiserver healthz at https://192.168.56.66:8443/healthz ...
I1130 11:34:28.044111   10840 api_server.go:279] https://192.168.56.66:8443/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[-]poststarthook/scheduling/bootstrap-system-priority-classes failed: reason withheld
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-deprecated-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
[+]poststarthook/apiservice-discovery-controller ok
healthz check failed
W1130 11:34:28.044111   10840 api_server.go:103] status: https://192.168.56.66:8443/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[-]poststarthook/scheduling/bootstrap-system-priority-classes failed: reason withheld
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-deprecated-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
[+]poststarthook/apiservice-discovery-controller ok
healthz check failed
I1130 11:34:28.540241   10840 api_server.go:253] Checking apiserver healthz at https://192.168.56.66:8443/healthz ...
I1130 11:34:28.546040   10840 api_server.go:279] https://192.168.56.66:8443/healthz returned 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-deprecated-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
[+]poststarthook/apiservice-discovery-controller ok
healthz check failed
W1130 11:34:28.546040   10840 api_server.go:103] status: https://192.168.56.66:8443/healthz returned error 500:
[+]ping ok
[+]log ok
[+]etcd ok
[+]poststarthook/start-kube-apiserver-admission-initializer ok
[+]poststarthook/generic-apiserver-start-informers ok
[+]poststarthook/priority-and-fairness-config-consumer ok
[+]poststarthook/priority-and-fairness-filter ok
[+]poststarthook/storage-object-count-tracker-hook ok
[+]poststarthook/start-apiextensions-informers ok
[+]poststarthook/start-apiextensions-controllers ok
[+]poststarthook/crd-informer-synced ok
[+]poststarthook/start-system-namespaces-controller ok
[+]poststarthook/bootstrap-controller ok
[-]poststarthook/rbac/bootstrap-roles failed: reason withheld
[+]poststarthook/scheduling/bootstrap-system-priority-classes ok
[+]poststarthook/priority-and-fairness-config-producer ok
[+]poststarthook/start-cluster-authentication-info-controller ok
[+]poststarthook/start-kube-apiserver-identity-lease-controller ok
[+]poststarthook/start-deprecated-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-kube-apiserver-identity-lease-garbage-collector ok
[+]poststarthook/start-legacy-token-tracking-controller ok
[+]poststarthook/aggregator-reload-proxy-client-cert ok
[+]poststarthook/start-kube-aggregator-informers ok
[+]poststarthook/apiservice-registration-controller ok
[+]poststarthook/apiservice-status-available-controller ok
[+]poststarthook/kube-apiserver-autoregistration ok
[+]autoregister-completion ok
[+]poststarthook/apiservice-openapi-controller ok
[+]poststarthook/apiservice-openapiv3-controller ok
[+]poststarthook/apiservice-discovery-controller ok
healthz check failed
I1130 11:34:29.047258   10840 api_server.go:253] Checking apiserver healthz at https://192.168.56.66:8443/healthz ...
I1130 11:34:29.051753   10840 api_server.go:279] https://192.168.56.66:8443/healthz returned 200:
ok
I1130 11:34:29.058608   10840 api_server.go:141] control plane version: v1.27.4
I1130 11:34:29.058608   10840 api_server.go:131] duration metric: took 3.5274033s to wait for apiserver health ...
I1130 11:34:29.058608   10840 cni.go:84] Creating CNI manager for ""
I1130 11:34:29.058608   10840 cni.go:158] "hyperv" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I1130 11:34:29.059125   10840 out.go:177] 🔗  Configuring bridge CNI (Container Networking Interface) ...
I1130 11:34:29.068754   10840 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I1130 11:34:29.073493   10840 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (457 bytes)
I1130 11:34:29.081540   10840 system_pods.go:43] waiting for kube-system pods to appear ...
I1130 11:34:29.088720   10840 system_pods.go:59] 7 kube-system pods found
I1130 11:34:29.088720   10840 system_pods.go:61] "coredns-5d78c9869d-wqhhq" [d4a8a97f-5fcb-482d-89f9-9174d8197a7e] Running / Ready:ContainersNotReady (containers with unready status: [coredns]) / ContainersReady:ContainersNotReady (containers with unready status: [coredns])
I1130 11:34:29.088720   10840 system_pods.go:61] "etcd-minikube" [678d780f-26d4-416c-821d-d1f13a75d5ce] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I1130 11:34:29.088720   10840 system_pods.go:61] "kube-apiserver-minikube" [41666114-c8d2-47c0-9b94-06786d6a3f43] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I1130 11:34:29.088720   10840 system_pods.go:61] "kube-controller-manager-minikube" [20a40001-2301-4d89-84f7-c7a0c2685083] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I1130 11:34:29.088720   10840 system_pods.go:61] "kube-proxy-r9tbh" [e654e757-871f-45cb-b38c-78be8ca1f325] Running
I1130 11:34:29.088720   10840 system_pods.go:61] "kube-scheduler-minikube" [29622866-5f2d-45d4-9b34-f5397ea56496] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I1130 11:34:29.088720   10840 system_pods.go:61] "storage-provisioner" [38704a9e-b5f8-4b05-b103-41eb609cb693] Running / Ready:ContainersNotReady (containers with unready status: [storage-provisioner]) / ContainersReady:ContainersNotReady (containers with unready status: [storage-provisioner])
I1130 11:34:29.088720   10840 system_pods.go:74] duration metric: took 7.1802ms to wait for pod list to return data ...
I1130 11:34:29.088720   10840 node_conditions.go:102] verifying NodePressure condition ...
I1130 11:34:29.091823   10840 node_conditions.go:122] node storage ephemeral capacity is 17784752Ki
I1130 11:34:29.091823   10840 node_conditions.go:123] node cpu capacity is 2
I1130 11:34:29.091823   10840 node_conditions.go:105] duration metric: took 3.103ms to run NodePressure ...
I1130 11:34:29.091823   10840 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.27.4:$PATH" kubeadm init phase addon all --config /var/tmp/minikube/kubeadm.yaml"
I1130 11:34:29.203462   10840 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I1130 11:34:29.208731   10840 ops.go:34] apiserver oom_adj: -16
I1130 11:34:29.208731   10840 kubeadm.go:640] restartCluster took 16.0520232s
I1130 11:34:29.208731   10840 kubeadm.go:406] StartCluster complete in 16.0773449s
I1130 11:34:29.208731   10840 settings.go:142] acquiring lock: {Name:mk20b12f719b7965ebf345757ae8eb163435325d Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1130 11:34:29.208731   10840 settings.go:150] Updating kubeconfig:  C:\Users\PC\.kube\config
I1130 11:34:29.209753   10840 lock.go:35] WriteFile acquiring C:\Users\PC\.kube\config: {Name:mk82ca6f587f47fa1fdc70041f725ef9cc6a69d6 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I1130 11:34:29.210790   10840 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.27.4/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I1130 11:34:29.210790   10840 addons.go:499] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false volumesnapshots:false]
I1130 11:34:29.210790   10840 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I1130 11:34:29.210790   10840 addons.go:231] Setting addon storage-provisioner=true in "minikube"
W1130 11:34:29.210790   10840 addons.go:240] addon storage-provisioner should already be in state true
I1130 11:34:29.210790   10840 addons.go:69] Setting default-storageclass=true in profile "minikube"
I1130 11:34:29.210790   10840 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I1130 11:34:29.210790   10840 host.go:66] Checking if "minikube" exists ...
I1130 11:34:29.210790   10840 config.go:182] Loaded profile config "minikube": Driver=hyperv, ContainerRuntime=docker, KubernetesVersion=v1.27.4
I1130 11:34:29.210790   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:34:29.211310   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:34:29.228357   10840 kapi.go:248] "coredns" deployment in "kube-system" namespace and "minikube" context rescaled to 1 replicas
I1130 11:34:29.228357   10840 start.go:223] Will wait 6m0s for node &{Name: IP:192.168.56.66 Port:8443 KubernetesVersion:v1.27.4 ContainerRuntime:docker ControlPlane:true Worker:true}
I1130 11:34:29.228861   10840 out.go:177] 🔎  Verifying Kubernetes components...
I1130 11:34:29.241121   10840 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I1130 11:34:29.388884   10840 api_server.go:52] waiting for apiserver process to appear ...
I1130 11:34:29.388884   10840 start.go:874] CoreDNS already contains "host.minikube.internal" host record, skipping...
I1130 11:34:29.397460   10840 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I1130 11:34:29.404726   10840 api_server.go:72] duration metric: took 176.3694ms to wait for apiserver process to appear ...
I1130 11:34:29.404726   10840 api_server.go:88] waiting for apiserver healthz status ...
I1130 11:34:29.404726   10840 api_server.go:253] Checking apiserver healthz at https://192.168.56.66:8443/healthz ...
I1130 11:34:29.408630   10840 api_server.go:279] https://192.168.56.66:8443/healthz returned 200:
ok
I1130 11:34:29.409136   10840 api_server.go:141] control plane version: v1.27.4
I1130 11:34:29.409136   10840 api_server.go:131] duration metric: took 4.4101ms to wait for apiserver health ...
I1130 11:34:29.409136   10840 system_pods.go:43] waiting for kube-system pods to appear ...
I1130 11:34:29.412744   10840 system_pods.go:59] 7 kube-system pods found
I1130 11:34:29.412744   10840 system_pods.go:61] "coredns-5d78c9869d-wqhhq" [d4a8a97f-5fcb-482d-89f9-9174d8197a7e] Running / Ready:ContainersNotReady (containers with unready status: [coredns]) / ContainersReady:ContainersNotReady (containers with unready status: [coredns])
I1130 11:34:29.412744   10840 system_pods.go:61] "etcd-minikube" [678d780f-26d4-416c-821d-d1f13a75d5ce] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I1130 11:34:29.412744   10840 system_pods.go:61] "kube-apiserver-minikube" [41666114-c8d2-47c0-9b94-06786d6a3f43] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I1130 11:34:29.412744   10840 system_pods.go:61] "kube-controller-manager-minikube" [20a40001-2301-4d89-84f7-c7a0c2685083] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I1130 11:34:29.412744   10840 system_pods.go:61] "kube-proxy-r9tbh" [e654e757-871f-45cb-b38c-78be8ca1f325] Running
I1130 11:34:29.412744   10840 system_pods.go:61] "kube-scheduler-minikube" [29622866-5f2d-45d4-9b34-f5397ea56496] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I1130 11:34:29.412744   10840 system_pods.go:61] "storage-provisioner" [38704a9e-b5f8-4b05-b103-41eb609cb693] Running / Ready:ContainersNotReady (containers with unready status: [storage-provisioner]) / ContainersReady:ContainersNotReady (containers with unready status: [storage-provisioner])
I1130 11:34:29.412744   10840 system_pods.go:74] duration metric: took 3.6079ms to wait for pod list to return data ...
I1130 11:34:29.412744   10840 kubeadm.go:581] duration metric: took 184.3874ms to wait for : map[apiserver:true system_pods:true] ...
I1130 11:34:29.412744   10840 node_conditions.go:102] verifying NodePressure condition ...
I1130 11:34:29.414801   10840 node_conditions.go:122] node storage ephemeral capacity is 17784752Ki
I1130 11:34:29.414801   10840 node_conditions.go:123] node cpu capacity is 2
I1130 11:34:29.414801   10840 node_conditions.go:105] duration metric: took 2.0571ms to run NodePressure ...
I1130 11:34:29.414801   10840 start.go:228] waiting for startup goroutines ...
I1130 11:34:29.676737   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:34:29.676737   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:34:29.676737   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:29.676737   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:29.677761   10840 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I1130 11:34:29.678800   10840 addons.go:423] installing /etc/kubernetes/addons/storage-provisioner.yaml
I1130 11:34:29.678800   10840 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I1130 11:34:29.678800   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:34:29.683768   10840 addons.go:231] Setting addon default-storageclass=true in "minikube"
W1130 11:34:29.683768   10840 addons.go:240] addon default-storageclass should already be in state true
I1130 11:34:29.683768   10840 host.go:66] Checking if "minikube" exists ...
I1130 11:34:29.684293   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:34:30.113982   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:34:30.113982   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:34:30.113982   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:30.113982   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:30.113982   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:34:30.113982   10840 addons.go:423] installing /etc/kubernetes/addons/storageclass.yaml
I1130 11:34:30.113982   10840 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I1130 11:34:30.113982   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive ( Hyper-V\Get-VM minikube ).state
I1130 11:34:30.548693   10840 main.go:141] libmachine: [stdout =====>] : Running

I1130 11:34:30.548693   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:30.548693   10840 main.go:141] libmachine: [executing ==>] : C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -NonInteractive (( Hyper-V\Get-VM minikube ).networkadapters[0]).ipaddresses[0]
I1130 11:34:30.722977   10840 main.go:141] libmachine: [stdout =====>] : 192.168.56.66

I1130 11:34:30.722977   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:30.722977   10840 sshutil.go:53] new ssh client: &{IP:192.168.56.66 Port:22 SSHKeyPath:C:\Users\PC\.minikube\machines\minikube\id_rsa Username:docker}
I1130 11:34:30.819063   10840 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.27.4/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I1130 11:34:31.131581   10840 main.go:141] libmachine: [stdout =====>] : 192.168.56.66

I1130 11:34:31.131581   10840 main.go:141] libmachine: [stderr =====>] : 
I1130 11:34:31.131581   10840 sshutil.go:53] new ssh client: &{IP:192.168.56.66 Port:22 SSHKeyPath:C:\Users\PC\.minikube\machines\minikube\id_rsa Username:docker}
I1130 11:34:31.248290   10840 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.27.4/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I1130 11:34:31.414498   10840 out.go:177] 🌟  Enabled addons: storage-provisioner, default-storageclass
I1130 11:34:31.415093   10840 addons.go:502] enable addons completed in 2.2048258s: enabled=[storage-provisioner default-storageclass]
I1130 11:34:31.415093   10840 start.go:233] waiting for cluster config update ...
I1130 11:34:31.415093   10840 start.go:242] writing updated cluster config ...
I1130 11:34:31.424380   10840 ssh_runner.go:195] Run: rm -f paused
I1130 11:34:31.504029   10840 start.go:600] kubectl: 1.27.2, cluster: 1.27.4 (minor skew: 0)
I1130 11:34:31.504588   10840 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default


